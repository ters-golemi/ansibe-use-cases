---
# Use Case 4: Rollback Configuration Changes
# This playbook restores previous configurations from backups
# to quickly recover from failed changes or security incidents

- name: Identify Rollback Configuration
  hosts: localhost
  gather_facts: no
  
  vars_prompt:
    - name: rollback_date
      prompt: "Enter backup date (YYYY-MM-DD) or 'latest' for most recent"
      private: no
      default: "latest"
    
    - name: target_devices
      prompt: "Enter device names (comma-separated) or 'all' for all devices"
      private: no
      default: "all"
  
  tasks:
    - name: Find available backup dates
      find:
        paths: "../backups"
        file_type: directory
      register: backup_dirs
      tags: discover
    
    - name: Display available backups
      debug:
        msg: "Available backup dates: {{ backup_dirs.files | map(attribute='path') | map('basename') | list }}"
      tags: discover
    
    - name: Set rollback directory
      set_fact:
        rollback_dir: "../backups/{{ rollback_date if rollback_date != 'latest' else (backup_dirs.files | sort(attribute='mtime', reverse=true) | first).path | basename }}"
      tags: prepare

- name: Pre-Rollback Verification
  hosts: network_devices
  gather_facts: no
  
  tasks:
    - name: Create pre-rollback backup
      cisco.ios.ios_config:
        backup: yes
        backup_options:
          filename: "{{ inventory_hostname }}_pre_rollback_{{ ansible_date_time.iso8601_basic_short }}.cfg"
          dir_path: "../backups/rollback_safety_{{ ansible_date_time.date }}"
      register: safety_backup
      tags: safety
    
    - name: Display safety backup location
      debug:
        msg: "Safety backup created: {{ safety_backup.backup_path }}"
      when: safety_backup is succeeded
      tags: safety
    
    - name: Verify rollback configuration exists
      stat:
        path: "{{ hostvars['localhost'].rollback_dir }}/{{ inventory_hostname }}_running_*.cfg"
      register: rollback_config_check
      delegate_to: localhost
      tags: verify

- name: Execute Configuration Rollback
  hosts: network_devices
  gather_facts: no
  serial: 5  # Rollback 5 devices at a time for safety
  
  vars:
    rollback_timeout: 300
  
  tasks:
    - name: Find specific backup file for device
      find:
        paths: "{{ hostvars['localhost'].rollback_dir }}"
        patterns: "{{ inventory_hostname }}_running_*.cfg"
      register: backup_files
      delegate_to: localhost
      tags: rollback
    
    - name: Fail if no backup found
      fail:
        msg: "No backup configuration found for {{ inventory_hostname }}"
      when: backup_files.matched == 0
      tags: rollback
    
    - name: Display rollback source
      debug:
        msg: |
          Rolling back {{ inventory_hostname }}
          Source: {{ backup_files.files[0].path }}
          Size: {{ backup_files.files[0].size }} bytes
          Modified: {{ backup_files.files[0].mtime }}
      tags: rollback
    
    - name: Load backup configuration content
      slurp:
        src: "{{ backup_files.files[0].path }}"
      register: backup_content
      delegate_to: localhost
      tags: rollback
    
    - name: Apply rollback configuration
      cisco.ios.ios_config:
        src: "{{ backup_files.files[0].path }}"
        save_when: modified
      register: rollback_result
      tags: rollback
      timeout: "{{ rollback_timeout }}"
    
    - name: Verify device connectivity post-rollback
      wait_for:
        host: "{{ ansible_host }}"
        port: 22
        timeout: 120
      delegate_to: localhost
      register: connectivity_check
      tags: verify
    
    - name: Verify configuration was applied
      cisco.ios.ios_command:
        commands:
          - show running-config | include hostname
          - show ip interface brief
      register: post_rollback_verify
      tags: verify
    
    - name: Log rollback status
      lineinfile:
        path: "../configs/rollback_log_{{ ansible_date_time.date }}.txt"
        line: "{{ ansible_date_time.iso8601 }}|{{ inventory_hostname }}|{{ backup_files.files[0].path | basename }}|{{ 'SUCCESS' if rollback_result is succeeded else 'FAILED' }}|{{ 'ONLINE' if connectivity_check is succeeded else 'OFFLINE' }}"
        create: yes
      delegate_to: localhost
      tags: log
    
    - name: Create rollback report for device
      copy:
        content: |
          Rollback Report: {{ inventory_hostname }}
          ========================================
          
          Rollback Date: {{ ansible_date_time.iso8601 }}
          Device IP: {{ ansible_host }}
          
          Source Configuration:
          - File: {{ backup_files.files[0].path | basename }}
          - Size: {{ backup_files.files[0].size }} bytes
          - Created: {{ '%Y-%m-%d %H:%M:%S' | strftime(backup_files.files[0].mtime) }}
          
          Safety Backup:
          - Created before rollback
          - Location: {{ safety_backup.backup_path | default('N/A') }}
          
          Rollback Status: {{ 'SUCCESS' if rollback_result is succeeded else 'FAILED' }}
          Connectivity: {{ 'ONLINE' if connectivity_check is succeeded else 'OFFLINE' }}
          
          Post-Rollback Verification:
          {{ post_rollback_verify.stdout_lines | to_nice_yaml }}
          
          Changes Applied: {{ rollback_result.changed }}
          
          Rollback completed at {{ ansible_date_time.iso8601 }}
        dest: "../configs/{{ inventory_hostname }}_rollback_report_{{ ansible_date_time.iso8601_basic_short }}.txt"
      delegate_to: localhost
      tags: report

- name: Post-Rollback Summary
  hosts: localhost
  gather_facts: yes
  
  tasks:
    - name: Create executive rollback summary
      copy:
        content: |
          CONFIGURATION ROLLBACK EXECUTIVE SUMMARY
          ========================================
          
          Rollback Execution Date: {{ ansible_date_time.iso8601 }}
          Rollback Source: {{ hostvars['localhost'].rollback_dir }}
          
          Rollback Strategy:
          - Serial execution (5 devices at a time)
          - Safety backups created before rollback
          - Post-rollback connectivity verification
          - Configuration verification
          
          Safety Measures:
          1. Pre-rollback backup of current config
          2. Gradual rollback (not all at once)
          3. Connectivity checks after each device
          4. Comprehensive logging and reporting
          
          Rollback Process:
          Phase 1: Discovery
          - Identified available backup dates
          - Located rollback configurations
          
          Phase 2: Safety
          - Created safety backups
          - Verified rollback files exist
          
          Phase 3: Execution
          - Applied rollback configurations
          - Verified connectivity
          - Validated configuration
          
          Phase 4: Reporting
          - Generated device reports
          - Created summary documentation
          
          Recovery Time:
          - Traditional manual rollback: 15-30 minutes per device
          - Automated rollback: ~2-3 minutes per device
          - Time savings: 80-90% reduction in recovery time
          
          Benefits:
          - Rapid recovery from failed changes
          - Minimal downtime
          - Complete audit trail
          - Safety backups prevent data loss
          - Repeatable and reliable process
          
          Use Cases for Rollback:
          - Failed configuration change
          - Security incident response
          - Accidental misconfiguration
          - Testing/validation rollback
          - Compliance restoration
          
          Log Files:
          - Rollback log: configs/rollback_log_{{ ansible_date_time.date }}.txt
          - Device reports: configs/*_rollback_report_*.txt
          - Safety backups: backups/rollback_safety_{{ ansible_date_time.date }}/
          
          Next Steps:
          1. Review individual device rollback reports
          2. Verify all devices are operational
          3. Investigate root cause of issue requiring rollback
          4. Update change management procedures if needed
          5. Archive rollback logs for compliance
        dest: "./use-case-4-rollback/configs/rollback_summary_{{ ansible_date_time.date }}.txt"
      tags: summary
